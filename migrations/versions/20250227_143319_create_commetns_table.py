"""Create comments table

Revision ID: c217e0823a66
Revises: 156e6e2a6446
Create Date: 2025-02-27 14:33:19.758578

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'c217e0823a66'
down_revision = '156e6e2a6446'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='fk_comments_posts'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_comments_users'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE comments SET SCHEMA {SCHEMA};")

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_posts_communities', 'communities', ['community_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint('fk_posts_communities', type_='foreignkey')

    op.drop_table('comments')
    # ### end Alembic commands ###
